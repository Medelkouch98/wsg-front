import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { PaginatedApiResponse, QueryParam } from '@app/models';
import { Observable } from 'rxjs';
import { IExploitantCentre } from '../components/exploitant-centre-save-table/models';
import { EXPLOITANT_CENTRE_API_URL } from '@app/config';
import { IExploitantCentreForm } from '../components/exploitant-centre-save-form/models';
import * as moment from 'moment';

@Injectable({
  providedIn: 'root',
})
export class ExploitantCentreService {
  constructor(private http: HttpClient) {}

  /**
   * Récupérer la liste des exploitants centre
   * @param params QueryParam
   * @return Observable<PaginatedApiResponse<IExploitantCentre>>
   */
  public getExploitantCentre(
    params: QueryParam
  ): Observable<PaginatedApiResponse<IExploitantCentre>> {
    return this.http.get<PaginatedApiResponse<IExploitantCentre>>(
      `${EXPLOITANT_CENTRE_API_URL}`,
      { params }
    );
  }

  /**
   * Ajouter exploitant centre
   * @param data FormData
   * @return Observable<IExploitantCentre>
   */
  public addExploitant(data: FormData): Observable<IExploitantCentre> {
    return this.http.post<IExploitantCentre>(
      `${EXPLOITANT_CENTRE_API_URL}`,
      data
    );
  }

  /**
   * Modifier exploitant centre
   * @param id number
   * @param data { [key: string]: string | number}
   * @return Observable<IExploitantCentre>
   */
  public updateExploitant(
    id: number,
    data: { [key: string]: string | number }
  ): Observable<IExploitantCentre> {
    return this.http.patch<IExploitantCentre>(
      `${EXPLOITANT_CENTRE_API_URL}/${id}`,
      data
    );
  }

  /**
   * Supprimer exploitant centre
   * @param id number
   */
  public deleteExploitant(id: number) {
    return this.http.delete(`${EXPLOITANT_CENTRE_API_URL}/${id}`);
  }

  /**
   * Récupérer l'attestation exploitant
   * @param id number
   * @return Observable<Blob>
   */
  public getAttestation(id: number): Observable<Blob> {
    return this.http.get(`${EXPLOITANT_CENTRE_API_URL}/download-file/${id}`, {
      responseType: 'blob',
    });
  }

  /**
   * Ajouter attestation exploitant
   * @param id number
   * @param formData FormData
   * @return Observable<IExploitantCentre>
   */
  public addAttestation(
    id: number,
    formData: FormData
  ): Observable<IExploitantCentre> {
    return this.http.post<IExploitantCentre>(
      `${EXPLOITANT_CENTRE_API_URL}/upload-file/${id}`,
      formData
    );
  }

  /**
   * créer le formData pour ajouter un exploitant du centre
   * @param exploitantForm IExploitantCentreForm
   * @return FormData
   */
  public createAddExploitantRequest(
    exploitantForm: IExploitantCentreForm
  ): FormData {
    let formData = new FormData();
    Object.entries(exploitantForm).forEach(([key, value]) =>
      formData.append(
        key,
        value instanceof moment ? moment(value).format('YYYY-MM-DD') : value
      )
    );
    return formData;
  }
}
